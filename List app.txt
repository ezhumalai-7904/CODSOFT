<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Stylish To-Do List App</title>
  <style>
    /* General body and layout settings */
    body {
      font-family: 'Arial', sans-serif;
      background: #f0f0f5;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      overflow: hidden;
    }

    /* Container for the app */
    .container {
      width: 100%;
      max-width: 360px;
      height: 640px;
      background: white;
      border-radius: 20px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      position: relative;
      overflow: hidden;
      padding-top: 40px; /* Space for mobile header */
    }

    /* Mobile Header (Time, Battery, Network) */
    .mobile-header {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      padding: 8px 10px;
      background-color: #2c3e50;
      color: white;
      font-size: 14px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .mobile-header .back-btn {
      cursor: pointer;
      font-size: 16px;
      color: #ecf0f1;
    }

    .mobile-header .status {
      display: flex;
      gap: 15px;
    }

    .mobile-header .status span {
      display: flex;
      gap: 5px;
      align-items: center;
    }

    /* Slide styles */
    .slide {
      display: none;
      padding: 20px;
      text-align: center;
      height: calc(100% - 50px); /* Adjust height for the header */
    }

    .slide.active {
      display: block;
    }

    /* Task styles */
    .task {
      background: #f9f9f9;
      padding: 12px;
      margin: 10px 0;
      border-radius: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .task input[type="checkbox"] {
      margin-right: 10px;
    }

    .task button {
      background-color: #ff4d4d;
      border: none;
      padding: 8px 12px;
      color: white;
      border-radius: 5px;
      cursor: pointer;
    }

    .task button:hover {
      background-color: #e74c3c;
    }

    /* Input fields for adding/editing tasks */
    input[type="text"], textarea {
      width: 100%;
      padding: 12px;
      margin-bottom: 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
      box-sizing: border-box;
      font-size: 16px;
    }

    /* Buttons */
    button {
      padding: 12px 18px;
      font-size: 16px;
      background-color: #3498db;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    button:hover {
      background-color: #2980b9;
    }

    .back-btn {
      background-color: #34495e;
    }

    .back-btn:hover {
      background-color: #2c3e50;
    }

    /* Status bar icons */
    .status-bar {
      font-size: 12px;
      color: #ecf0f1;
    }

    /* Task Completion Slide Details */
    .task-completion-details {
      text-align: left;
      margin-bottom: 20px;
    }

    .task-completion-details p {
      font-size: 18px;
      color: #333;
    }

    /* Transition between slides */
    .slide {
      opacity: 0;
      transition: opacity 0.5s ease-in-out;
    }

    .slide.active {
      opacity: 1;
    }

  </style>
</head>
<body>

  <div class="container">
    <!-- Mobile Header (Time, Battery, Network) -->
    <div class="mobile-header">
      <div class="back-btn" onclick="goBack()">&#8592; Back</div>
      <div class="status">
        <span class="status-bar">12:45 PM</span>
        <span class="status-bar">•</span>
        <span class="status-bar">100%</span>
        <span class="status-bar">•</span>
        <span class="status-bar">LTE</span>
      </div>
    </div>

    <!-- Slide 1: Home Screen -->
    <div class="slide active" id="homeScreen">
      <h1>My Tasks</h1>
      <div id="taskList"></div>
      <button onclick="showCreateTaskSlide()">+ Add Task</button>
    </div>

    <!-- Slide 2: Task Creation -->
    <div class="slide" id="createTask">
      <h1>Create Task</h1>
      <input type="text" id="taskTitle" placeholder="Task Title">
      <textarea id="taskDescription" placeholder="Task Description"></textarea>
      <button onclick="addTask()">Add Task</button>
      <button onclick="showHomeScreen()" class="back-btn">Back</button>
    </div>

    <!-- Slide 3: Task Editing -->
    <div class="slide" id="editTask">
      <h1>Edit Task</h1>
      <input type="text" id="editTaskTitle" placeholder="Task Title">
      <textarea id="editTaskDescription" placeholder="Task Description"></textarea>
      <button onclick="saveTask()">Save</button>
      <button onclick="showHomeScreen()" class="back-btn">Back</button>
    </div>

    <!-- Slide 4: Task Completion -->
    <div class="slide" id="taskCompletion">
      <h1>Task Completion</h1>
      <div class="task-completion-details" id="taskCompletionDetails"></div>
      <button onclick="markTaskAsCompleted()">Mark as Completed</button>
      <button onclick="showHomeScreen()" class="back-btn">Back</button>
    </div>
  </div>

  <script>
    let tasks = JSON.parse(localStorage.getItem('tasks')) || [];
    let currentEditingIndex = -1;

    // Function to show home screen (list of tasks)
    function showHomeScreen() {
      document.getElementById('homeScreen').classList.add('active');
      document.getElementById('createTask').classList.remove('active');
      document.getElementById('editTask').classList.remove('active');
      document.getElementById('taskCompletion').classList.remove('active');
      renderTasks();
    }

    // Function to show task creation screen
    function showCreateTaskSlide() {
      document.getElementById('homeScreen').classList.remove('active');
      document.getElementById('createTask').classList.add('active');
    }

    // Function to show task editing screen
    function showEditTaskSlide(index) {
      currentEditingIndex = index;
      document.getElementById('editTaskTitle').value = tasks[index].title;
      document.getElementById('editTaskDescription').value = tasks[index].description;
      document.getElementById('homeScreen').classList.remove('active');
      document.getElementById('editTask').classList.add('active');
    }

    // Function to add a new task
    function addTask() {
      const title = document.getElementById('taskTitle').value;
      const description = document.getElementById('taskDescription').value;
      const task = { title, description, completed: false };
      tasks.push(task);
      saveTasks();
      showHomeScreen();
    }

    // Function to save task after editing
    function saveTask() {
      tasks[currentEditingIndex].title = document.getElementById('editTaskTitle').value;
      tasks[currentEditingIndex].description = document.getElementById('editTaskDescription').value;
      saveTasks();
      showHomeScreen();
    }

    // Function to delete a task
    function deleteTask(index) {
      tasks.splice(index, 1);
      saveTasks();
      renderTasks();
    }

    // Function to mark a task as completed
    function markTaskAsCompleted() {
      tasks[currentEditingIndex].completed = !tasks[currentEditingIndex].completed;
      saveTasks();
      showHomeScreen();
    }

    // Function to save tasks to localStorage
    function saveTasks() {
      localStorage.setItem('tasks', JSON.stringify(tasks));
    }

    // Function to render tasks on the home screen
    function renderTasks() {
      const taskList = document.getElementById('taskList');
      taskList.innerHTML = '';
      tasks.forEach((task, index) => {
        const li = document.createElement('li');
        li.className = 'task';
        li.innerHTML = `
          <input type="checkbox" ${task.completed ? 'checked' : ''} onclick="markTaskAsCompleted(${index})">
          <strong>${task.title}</strong>
          <p>${task.description}</p>
          <button onclick="showEditTaskSlide(${index})">Edit</button>
          <button onclick="deleteTask(${index})">Delete</button>
          <button onclick="showTaskCompletionSlide(${index})">Complete</button>
        `;
        taskList.appendChild(li);
      });
    }

    // Function to show task completion details
    function showTaskCompletionSlide(index) {
      currentEditingIndex = index;
      document.getElementById('taskCompletionDetails').innerHTML = `
        <p><strong>Task:</strong> ${tasks[index].title}</p>
        <p><strong>Description:</strong> ${tasks[index].description}</p>
        <p><strong>Status:</strong> ${tasks[index].completed ? 'Completed' : 'Active'}</p>
      `;
      document.getElementById('homeScreen').classList.remove('active');
      document.getElementById('taskCompletion').classList.add('active');
    }

    // Back button functionality to navigate between slides
    function goBack() {
      showHomeScreen();
    }

    // Initialize the app
    showHomeScreen();
  </script>

</body>
</html>